---
import type { GetStaticPaths } from "astro";
import { Icon } from "astro-icon/components";
import { getCollection, getEntry } from "astro:content";

// G√©n√®re toutes les routes possibles
export const getStaticPaths = (async () => {
  const allProjets = await getCollection("projects");

  return allProjets.map((project) => {
    return {
      params: { id: project.id.toString() },
      props: { project },
    };
  });
}) satisfies GetStaticPaths;

// R√©cup√®re le produit depuis les props
const { project } = Astro.props;

const persons = await Promise.all(
  ((project.data.Assignees as string[]) || []).map((personRef) =>
    getEntry({ collection: "persons", id: personRef })
  )
);

const tools = await Promise.all(
  ((project.data.Stack as string[]) || []).map((toolRef) =>
    getEntry({ collection: "tools", id: toolRef })
  )
);
---

<html lang="fr">
  <head>
    <meta charset="utf-8" />
    <title>{project.data.Name}</title>
  </head>
  <body>
    <nav class="p-4">
      <a href="/" class="p-2 rounded-md hover:bg-slate-200">‚Üê Retour</a>
    </nav>

    <main class="">
      <div class="flex flex-col items-center justify-center mb-8 gap-4">
        <div class="text-3xl font-bold">
          <span class="mr-8">
            {project.data.Level}
            ‚≠êÔ∏è
          </span>
          {project.data.Name}
        </div>
        <div class="max-w-96 border p-4 rounded">
          {project.data.Description}
        </div>
        <div class="flex items-center">
          {
            project.data.X && (
              <a href={`https://x.com/${project.data.X}`} target="_blank">
                <div class="p-1 rounded hover:bg-slate-200">
                  <Icon name="fa6-brands:x-twitter" />
                </div>
              </a>
            )
          }
          {
            project.data.instagram && (
              <a
                href={`https://www.instagram.com/${project.data.instagram}`}
                target="_blank"
              >
                <div class="p-1 rounded hover:bg-slate-200">
                  <Icon name="mdi:instagram" />
                </div>
              </a>
            )
          }
          {
            project.data.Link && (
              <a href={project.data.Link} target="_blank">
                <div class="p-1 rounded hover:bg-slate-200">
                  <Icon name="mdi:link" />
                </div>
              </a>
            )
          }
        </div>
      </div>
      <div class="max-w-screen-md m-auto">
        <div class="p-4">
          <div class="font-semibold">√âquipe</div>
          <div class="flex flex-col gap-2">
            {
              persons.length === 0 && (
                <div class="text-center opacity-60">
                  Aucune √©quipe (pour l'instant ‚òùÔ∏è)
                </div>
              )
            }
            {
              persons
                .sort((a, b) => {
                  return (b.data.Name || "").localeCompare(a.data.Name || "");
                })
                .map((person) => {
                  return (
                    <div class="flex flex-col gap-2 border rounded-md shadow p-4">
                      <div class="flex justify-between items-center">
                        <div class="flex gap-2 items-center">
                          <a
                            href={`/person/${person.id}`}
                            class="hover:underline text-lg font-bold"
                          >
                            {person.data.Name}
                          </a>
                          <div class="opacity-70">
                            {person.data.job} üìç{person.data.Ville}
                          </div>
                        </div>
                        <div class="flex items-center">
                          {person.data.perso && (
                            <a href={person.data.perso} target="_blank">
                              <div class="p-1 rounded hover:bg-slate-200">
                                <Icon name="mdi:link" />
                              </div>
                            </a>
                          )}
                          {person.data.freelance && (
                            <a href={person.data.freelance} target="_blank">
                              <div class="p-1 rounded hover:bg-slate-200">
                                <Icon name="mdi:money" />
                              </div>
                            </a>
                          )}
                          {person.data.github && (
                            <a
                              href={`https://github.com/${person.data.github}`}
                              target="_blank"
                            >
                              <div class="p-1 rounded hover:bg-slate-200">
                                <Icon name="mdi:github" />
                              </div>
                            </a>
                          )}
                          {person.data.linkedin && (
                            <a
                              href={`https://www.linkedin.com/in/${person.data.linkedin}`}
                              target="_blank"
                            >
                              <div class="p-1 rounded hover:bg-slate-200">
                                <Icon name="mdi:linkedin" />
                              </div>
                            </a>
                          )}
                          {person.data.x && (
                            <a
                              href={`https://x.com/${person.data.x}`}
                              target="_blank"
                            >
                              <div class="p-1 rounded hover:bg-slate-200">
                                <Icon name="fa6-brands:x-twitter" />
                              </div>
                            </a>
                          )}
                        </div>
                      </div>
                      <div class="flex items-center gap-2 p-1 opacity-70">
                        <Icon name="ic:baseline-discord" />
                        <p class="leading-3 pb-1">{person.data.discord}</p>
                      </div>
                    </div>
                  );
                })
            }
          </div>
        </div>
        <div class="p-4">
          <div class="font-semibold">Stack</div>
          <div class="flex flex-col gap-2">
            {
              tools.length === 0 && (
                <div class="text-center opacity-60">
                  Aucune stack (pour l'instant ‚òùÔ∏è)
                </div>
              )
            }
            {
              tools
                .sort((a, b) => {
                  return (a.data.Name || "").localeCompare(b.data.Name || "");
                })
                .map((tool) => {
                  return (
                    <div class="flex flex-col gap-2 border rounded-md shadow p-4">
                      <div class="flex justify-between items-center">
                        <div class="flex gap-4">
                          <div class="text-lg font-bold">{tool.data.Name}</div>
                          <div class="flex gap-2">
                            <div class="flex gap-2 flex-wrap items-center">
                              {tool.data["Name (from Category)"]
                                ?.sort((a, b) => a.localeCompare(b))
                                .map((category) => (
                                  <div class="text-xs px-1 rounded-full shadow break-keep">
                                    {category}
                                  </div>
                                ))}
                            </div>
                          </div>
                        </div>

                        <div class="flex gap-2">
                          {tool.data.link && (
                            <a href={tool.data.link} target="_blank">
                              <div class="p-1 rounded hover:bg-slate-200">
                                <Icon name="mdi:link" />
                              </div>
                            </a>
                          )}
                        </div>
                      </div>
                      <div>{tool.data.Description}</div>
                    </div>
                  );
                })
            }
          </div>
        </div>
      </div>
    </main>
  </body>
</html>
