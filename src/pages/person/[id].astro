---
import type { GetStaticPaths } from "astro";
import { Icon } from "astro-icon/components";
import { getCollection, getEntry } from "astro:content";

// G√©n√®re toutes les routes possibles
export const getStaticPaths = (async () => {
  const allPersons = await getCollection("persons");

  return allPersons.map((person) => {
    return {
      params: { id: person.id.toString() },
      props: { person },
    };
  });
}) satisfies GetStaticPaths;

// R√©cup√®re le produit depuis les props
const { person } = Astro.props;

const projects = await Promise.all(
  ((person.data.projects as string[]) || []).map((projectRef) =>
    getEntry({ collection: "projects", id: projectRef })
  )
);

const tools = await Promise.all(
  ((person.data.Specialist as string[]) || []).map((toolRef) =>
    getEntry({ collection: "tools", id: toolRef })
  )
);
---

<html lang="fr">
  <head>
    <meta charset="utf-8" />
    <title>{person.data.Name}</title>
  </head>
  <body>
    <nav class="p-4">
      <a href="/" class="p-2 rounded-md hover:bg-slate-200">‚Üê Retour</a>
    </nav>

    <main class="">
      <div class="flex flex-col items-center justify-center mb-8">
        <div class="text-3xl font-bold">{person.data.Name}</div>
        <div class="opacity-70">{person.data.job} üìç{person.data.Ville}</div>
        <div class="flex items-center">
          {
            person.data.perso && (
              <a href={person.data.perso} target="_blank">
                <div class="p-1 rounded hover:bg-slate-200">
                  <Icon name="mdi:link" />
                </div>
              </a>
            )
          }
          {
            person.data.freelance && (
              <a href={person.data.freelance} target="_blank">
                <div class="p-1 rounded hover:bg-slate-200">
                  <Icon name="mdi:money" />
                </div>
              </a>
            )
          }
          {
            person.data.github && (
              <a
                href={`https://github.com/${person.data.github}`}
                target="_blank"
              >
                <div class="p-1 rounded hover:bg-slate-200">
                  <Icon name="mdi:github" />
                </div>
              </a>
            )
          }
          {
            person.data.linkedin && (
              <a
                href={`https://www.linkedin.com/in/${person.data.linkedin}`}
                target="_blank"
              >
                <div class="p-1 rounded hover:bg-slate-200">
                  <Icon name="mdi:linkedin" />
                </div>
              </a>
            )
          }
          <div class="flex items-center gap-2 p-1 ml-4 opacity-70">
            <Icon name="ic:baseline-discord" />
            <p class="leading-3 pb-1">
              {person.data.discord}
            </p>
          </div>
        </div>
      </div>
      <div class="max-w-screen-md m-auto">
        <div class="p-4">
          <div class="font-semibold">Projets</div>
          <div class="flex flex-col gap-2">
            {
              projects.length === 0 && (
                <div class="text-center opacity-60">
                  Aucun projet (pour l'instant ‚òùÔ∏è)
                </div>
              )
            }
            {
              projects
                .sort((a, b) => {
                  return (b.data.Level || 0) - (a.data.Level || 0);
                })
                .map((project) => {
                  let ids = project.data.Stack as string[];
                  let stack = project.data["Name (from Stack)"]
                    ?.map((name, index) => {
                      return {
                        name,
                        id: ids[index],
                      };
                    })
                    .sort((a, b) => a.name.localeCompare(b.name));

                  return (
                    <div class="flex flex-col gap-2 border rounded-md shadow p-4">
                      <div class="flex justify-between items-center">
                        <div class="text-lg font-bold">
                          <span class="mr-8">
                            {project.data.Level}
                            ‚≠êÔ∏è
                          </span>
                          <a
                            href={`/project/${project.id}`}
                            class="hover:underline"
                          >
                            {project.data.Name}
                          </a>
                        </div>
                        <div class="flex">
                          {project.data.X && (
                            <a
                              href={`https://x.com/${project.data.X}`}
                              target="_blank"
                            >
                              <div class="p-1 rounded hover:bg-slate-200">
                                <Icon name="fa6-brands:x-twitter" />
                              </div>
                            </a>
                          )}
                          {project.data.instagram && (
                            <a
                              href={`https://www.instagram.com/${project.data.instagram}`}
                              target="_blank"
                            >
                              <div class="p-1 rounded hover:bg-slate-200">
                                <Icon name="mdi:instagram" />
                              </div>
                            </a>
                          )}
                          {project.data.Link && (
                            <a href={project.data.Link} target="_blank">
                              <div class="p-1 rounded hover:bg-slate-200">
                                <Icon name="mdi:link" />
                              </div>
                            </a>
                          )}
                        </div>
                      </div>

                      <div>{project.data.Description}</div>
                      <div class="flex flex-wrap gap-2">
                        {stack?.map((tool) => (
                          <a href={`/tool/${tool.id}`} class="hover:underline">
                            <div class="border shadow px-2 rounded">
                              {tool.name}
                            </div>
                          </a>
                        ))}
                      </div>
                    </div>
                  );
                })
            }
          </div>
        </div>
        <div class="p-4">
          <div class="font-semibold">Expertise</div>
          <div class="flex flex-col gap-2">
            {
              tools.length === 0 && (
                <div class="text-center opacity-60">
                  Aucune expertise (pour l'instant ‚òùÔ∏è)
                </div>
              )
            }
            {
              tools
                .sort((a, b) => {
                  return (a.data.Name || "").localeCompare(b.data.Name || "");
                })
                .map((tool) => {
                  return (
                    <div class="flex flex-col gap-2 border rounded-md shadow p-4">
                      <div class="flex justify-between items-center">
                        <div class="flex gap-4">
                          <div class="text-lg font-bold">
                            <a
                              href={`/tool/${tool.id}`}
                              class="hover:underline"
                            >
                              {tool.data.Name}
                            </a>
                          </div>
                          <div class="flex gap-2">
                            <div class="flex gap-2 flex-wrap items-center">
                              {tool.data["Name (from Category)"]
                                ?.sort((a, b) => a.localeCompare(b))
                                .map((category) => (
                                  <div class="text-xs px-1 rounded-full shadow break-keep">
                                    {category}
                                  </div>
                                ))}
                            </div>
                          </div>
                        </div>

                        <div class="flex gap-2">
                          {tool.data.link && (
                            <a href={tool.data.link} target="_blank">
                              <div class="p-1 rounded hover:bg-slate-200">
                                <Icon name="mdi:link" />
                              </div>
                            </a>
                          )}
                        </div>
                      </div>
                      <div>{tool.data.Description}</div>
                    </div>
                  );
                })
            }
          </div>
        </div>
      </div>
    </main>
  </body>
</html>
