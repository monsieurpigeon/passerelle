---
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";
import ToolFilter from "../components/product-filter";
import Layout from "../layouts/Layout.astro";

const allProjects = await getCollection("projects");
const allPersons = await getCollection("persons");
const allTools = (await getCollection("tools")).sort((a, b) =>
  (a.data.Name || "").localeCompare(b.data.Name || "")
);
---

<Layout>
  <div class="p-8 flex flex-col gap-8">
    <div class="flex justify-between">
      <div>
        <h1 class="text-4xl font-bold opacity-70">La Passerelle</h1>
        <p class="opacity-60">
          L'annuaire augment√© de Zefrenship, la commu Indie Hacker France üá´üá∑
        </p>
      </div>
      <div class="flex text-2xl items-start">
        <a
          href="https://github.com/monsieurpigeon/passerelle"
          target="_blank"
          class="hover:opacity-70 border border-transparent p-4 rounded hover:border-slate-400 transition-all"
        >
          <Icon name="mdi:github" />
        </a>
        <a
          href="https://discord.gg/pdpYk56SbZ"
          target="_blank"
          class="hover:opacity-70 border border-transparent p-4 rounded hover:border-slate-400 transition-all"
        >
          <Icon name="ic:baseline-discord" />
        </a>
      </div>
    </div>
    <div class="p-4 bg-lime-50 rounded shadow">
      <h1 class="text-xl font-bold">Les niveaux d'un projet</h1>
      <div class="flex items-center justify-center">
        <ul class="list-decimal list-inside text-lg p-4 flex flex-col gap-2">
          <li>Id√©e sous la douche</li>
          <li>Prototype / Croquis</li>
          <li>Produit qui sert √† 1 utilisateur</li>
          <li>Produit qui rapporte 1$</li>
          <li>Produit qui rapporte 10$ par mois</li>
          <li>Produit qui rapporte 100$ par mois</li>
          <li>Produit qui rapporte 1k$ par mois</li>
          <li>Produit qui rapporte 10k$ par mois</li>
          <li>Produit qui rapporte 100k$ par mois</li>
          <li>Licorne (√©valu√©e √† plus d'un milliard $)</li>
        </ul>
      </div>
    </div>
    <div class="flex flex-col gap-4 border p-4 bg-slate-300 rounded shadow">
      <div>
        <h1 class="text-xl font-bold pb-4">Personnes</h1>
        <ul class="grid lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-4">
          {
            allPersons
              .filter((person) => person.data.Name)
              .sort((a, b) =>
                (a.data.Surname || "").localeCompare(b.data.Surname || "")
              )
              .map((person) => (
                <li class="">
                  <div class="h-full border p-4 rounded flex flex-col gap-4 justify-between bg-slate-50 shadow-md">
                    <div>
                      <div class="flex items-start justify-between">
                        <div>
                          <div class="font-semibold flex gap-1 items-center leading-3">
                            <a
                              href={`/person/${person.id}`}
                              class="hover:underline"
                            >
                              {person.data.Name}
                            </a>
                            <Icon
                              name="ic:baseline-discord"
                              class="opacity-50 ml-2"
                            />
                            <p class="text-sm opacity-50">
                              {person.data.discord}
                            </p>
                          </div>
                          <p class="opacity-70">
                            {person.data.job}{" "}
                            <span class="text-sm">üìç{person.data.Ville}</span>
                          </p>
                        </div>

                        <div class="flex">
                          {person.data.perso && (
                            <a href={person.data.perso} target="_blank">
                              <div class="p-1 rounded hover:bg-slate-200">
                                <Icon name="mdi:link" />
                              </div>
                            </a>
                          )}
                          {person.data.freelance && (
                            <a href={person.data.freelance} target="_blank">
                              <div class="p-1 rounded hover:bg-slate-200">
                                <Icon name="mdi:money" />
                              </div>
                            </a>
                          )}
                          {person.data.github && (
                            <a
                              href={`https://github.com/${person.data.github}`}
                              target="_blank"
                            >
                              <div class="p-1 rounded hover:bg-slate-200">
                                <Icon name="mdi:github" />
                              </div>
                            </a>
                          )}
                          {person.data.linkedin && (
                            <a
                              href={`https://www.linkedin.com/in/${person.data.linkedin}`}
                              target="_blank"
                            >
                              <div class="p-1 rounded hover:bg-slate-200">
                                <Icon name="mdi:linkedin" />
                              </div>
                            </a>
                          )}
                        </div>
                      </div>
                    </div>

                    <div class="flex gap-2 flex-wrap">
                      {person.data["Name (from Projects)"]?.map((project) => (
                        <div class="border px-2 rounded-md shadow">
                          {project}
                        </div>
                      ))}
                    </div>
                  </div>
                </li>
              ))
          }
        </ul>
      </div>
      <div>
        <h1 class="text-xl font-bold pb-4">Projets</h1>
        <ul class="grid lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-4">
          {
            allProjects
              .sort((a, b) => (b.data.Level || 0) - (a.data.Level || 0))
              .map((project) => (
                <li class="border p-4 rounded flex flex-col gap-4 justify-between bg-slate-50 shadow-md">
                  <div>
                    <div class="flex items-center justify-between relative">
                      <div class="text-lg font-bold">
                        <span class="px-2 rounded-full absolute -top-7 -left-4 bg-slate-100 shadow-md">
                          {project.data.Level}
                          ‚≠êÔ∏è
                        </span>
                        <a
                          href={`/project/${project.id}`}
                          class="hover:underline"
                        >
                          {project.data.Name}
                        </a>
                      </div>

                      <div class="flex">
                        {project.data.instagram && (
                          <a
                            href={`https://www.instagram.com/${project.data.instagram}`}
                            target="_blank"
                          >
                            <div class="p-1 rounded hover:bg-slate-200">
                              <Icon name="mdi:instagram" />
                            </div>
                          </a>
                        )}
                        {project.data.Link && (
                          <a href={project.data.Link} target="_blank">
                            <div class="p-1 rounded hover:bg-slate-200">
                              <Icon name="mdi:link" />
                            </div>
                          </a>
                        )}
                      </div>
                    </div>

                    <div class="flex flex-wrap gap-4">
                      {project.data["Name (from Assignee)"]?.map(
                        (person, index) => {
                          return (
                            <a
                              href={`/person/${(project.data.Assignees as string[])[index]}`}
                              class="text-sm hover:opacity-70"
                            >
                              {person}
                            </a>
                          );
                        }
                      )}
                    </div>

                    <p class="opacity-70">{project.data.Description}</p>
                  </div>

                  <div class="flex flex-wrap gap-2">
                    {project.data["Name (from Stack)"]?.map((tool) => (
                      <div class="border px-2 rounded-md shadow">{tool}</div>
                    ))}
                  </div>
                </li>
              ))
          }
        </ul>
      </div>
      <div>
        <ToolFilter client:load tools={allTools} />
      </div>
    </div>
  </div>
</Layout>
